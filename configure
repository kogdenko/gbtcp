#!/bin/sh

CC=${CC:-cc}
PREFIX="/usr/local"
CFLAGS="$CFLAGS -g -Wall -Werror -I. -std=gnu99 -pipe"
CFLAGS="$CFLAGS -finline-functions -pthread -fPIC"
CFLAGS="$CFLAGS -D_LIBC_REENTRANT"
CFLAGS="$CFLAGS -Wunused-variable"
CFLAGS="$CFLAGS -fdiagnostics-color=never"
LDFLAGS="$LDFLAGS -pthread -lm -L."

SUBDIRS="test ./tools/so_echo"
SRCS="`find ./gbtcp -maxdepth 1 -name '*.c'`"
SRCS="$SRCS `find ./gbtcp/$(uname) -maxdepth 1 -name '*.c'`"
OBJS=`echo $SRCS | sed 's/\.c/.o/g'`
BINS="gbtcpd sysctl netstat fwd"
TARGETS=`echo $BINS | sed 's/[^ ]* */.\/bin\/&/g'`

if [ "$(uname)" = "Linux" ]; then
	LDFLAGS="$LDFLAGS -ldl"
	GROUPADD="groupadd"
elif [ "$(uname)" = "FreeBSD" ]; then
	LDFLAGS="$LDFLAGS -lexecinfo -lutil"
	GROUPADD="pw groupadd"
else
	echo "Unsupported platform: $(uname)"
	exit 1
fi

if `$CC -v 2>&1 | grep 'gcc version' >/dev/null 2>&1`; then
	CFLAGS="$CFLAGS -Wno-format-truncation"
	CFLAGS="$CFLAGS -falign-functions=16"
elif `$CC -v 2>&1 | grep 'clang version' >/dev/null 2>&1`; then
	CFLAGS="$CFLAGS"
else
	echo "Unsupported compiler: $CC"
	exit 2
fi

NETMAP_DIR=""
WITH_DEBUG=false

usage() 
{
	echo "  -h       print this message"
	echo "  -n=PATH  set netmap pathname"
	echo "  -d       debug version"
	exit 0
}


while getopts ":hn:d" opt; do
	case $opt in
	h)
		usage
		;;
	n)
		NETMAP_DIR=$OPTARG
		;;
	d)
		WITH_DEBUG=true
		;;
	esac
done

if ! [ -z "$NETMAP_DIR" ]
then
	echo "  netmap library: $NETMAP_DIR"
	CFLAGS="$CFLAGS -I$NETMAP_DIR -DHAVE_NETMAP"
fi

if [ "$WITH_DEBUG" = true ]
then
	CFLAGS="$CFLAGS -O0"
else
	CFLAGS="$CFLAGS -O2 -DNDEBUG"
fi

cat << END > Makefile
.PHONY: $SUBDIRS

all: ./bin/libgbtcp.so $TARGETS $SUBDIRS

CFLAGS = $CFLAGS
LDFLAGS = $LDFLAGS

%.o: %.c
	\$(CC) -c \$(CFLAGS) -o \$@ \$<

./bin/libgbtcp.so: $OBJS
	\$(CC) -rdynamic -o ./bin/libgbtcp.so -shared \$(CFLAGS) $OBJS \$(LDFLAGS)

END

for x in $BINS; do
	if [ -d $x ]; then
		path=$x
	elif [ -d ./tools/$x ]; then
		path=./tools/$x
	else
		echo "Unresolved path for binary '$x'"
		exit 2
	fi
	srcs="`find $path -name '*.c'`"
	objs=`echo $srcs | sed 's/\.c/.o/g'`
	cat << END >> Makefile
./bin/$x: $objs ./bin/libgbtcp.so
	\$(CC) -rdynamic -o ./bin/$x -L./bin $objs \$(LDFLAGS) -lgbtcp

END
done

for x in $SUBDIRS; do
	cat << END >> Makefile
$x:
	make -C ./$x

END
done

cat << END >> Makefile
install:
	grep '^gbtcp:' /etc/group || $GROUPADD gbtcp
	mkdir -p $PREFIX/gbtcp/
	mkdir -p $PREFIX/gbtcp/bin
	mkdir -p $PREFIX/gbtcp/ctl
	mkdir -p $PREFIX/gbtcp/log
	mkdir -p $PREFIX/gbtcp/pid
	mkdir -p $PREFIX/gbtcp/sock
	chgrp -R gbtcp $PREFIX/gbtcp
	chmod -R 775 $PREFIX/gbtcp
	cp -f ./bin/* $PREFIX/gbtcp/bin/

clean:
	rm -f ./bin/libgbtcp.so $TARGETS
	find . -name '*.o' | xargs rm -f
END

for x in $SUBDIRS; do
	cat << END >> Makefile
	make -C ./$x clean
END
done
